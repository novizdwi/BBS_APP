@using Models._Utils; 

@{
    GridViewModel viewModel = Model;
    
    var cpGvFind_FilterExpression = GetSqlFromGridViewModelState.getHanaCriteria(viewModel);
    var cpGvFind_SortExpression = GetSqlFromGridViewModelState.getHanaSort(viewModel);
    var cpGvFind_PageIndex = viewModel.Pager.PageIndex;
    var cpGvFind_PageSize = viewModel.Pager.PageSize;
}


@Html.DevExpress().GridView(settings=>
   {
       settings.Name ="gvRoleList";
       settings.KeyFieldName = "Id";
       settings.CallbackRouteValues =  new { Controller = "Role", Action = "ListPartial" }; 
        
       settings.Columns.Add(column =>
       {
           column.Caption = "#";
           
           column.SetDataItemTemplateContent(c =>
           {
               
               ViewContext.Writer.Write( 
                
                Html.DevExpress().HyperLink(settingsHL => {
                    settingsHL.Name = "Choose_" + DataBinder.Eval(c.DataItem, "Id") + "_" + Guid.NewGuid().ToString();
                    settingsHL.NavigateUrl = "javascript:void(0)";
                    settingsHL.Properties.Text = "Choose";
                    settingsHL.Properties.ClientSideEvents.Click = string.Format("function(s, e) {{ OnClickChoose(s, e, '{0}'); }}", DataBinder.Eval(c.DataItem, "Id"));
                }).GetHtml()
               
               
            );
           });
           column.SetHeaderTemplateContent(c =>
           {
               ViewContext.Writer.Write(
                  "#Action#"
               );
           });  
           
           column.Settings.AllowDragDrop = DefaultBoolean.False;
           column.Settings.AllowSort = DefaultBoolean.False;
           column.Width = 70;
       }); 
            
       settings.Settings.ShowFilterRow = true;
       settings.Settings.ShowFilterRowMenu = true;

       settings.Columns.Add("Id", "Id").Visible=false;
       settings.Columns.Add("RoleName", "Role Name");
       settings.SettingsPager.Position = PagerPosition.Bottom;
       settings.SettingsPager.FirstPageButton.Visible = true;
       settings.SettingsPager.LastPageButton.Visible = true;
       settings.SettingsPager.AlwaysShowPager = true;

       if (cpGvFind_PageIndex == 0)
       {
           settings.SettingsPager.PageSizeItemSettings.Visible = true;
       }
       
       settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };

       settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
       settings.Settings.VerticalScrollableHeight = 400;

       settings.SettingsBehavior.AllowFocusedRow = true;
      settings.Settings.ShowFilterBar = GridViewStatusBarMode.Hidden;
       
       settings.CustomBindingRouteValuesCollection.Add(
           GridViewOperationType.Paging,
           new { Controller = "Role", Action = "ListPaging" }
       ); 
       
       settings.CustomBindingRouteValuesCollection.Add(
           GridViewOperationType.Filtering,
           new { Controller = "Role", Action = "ListFiltering" }
       );

       settings.CustomBindingRouteValuesCollection.Add(
           GridViewOperationType.Sorting,
           new { Controller = "Role", Action = "ListSorting" }
       );

       settings.CustomJSProperties = (sender, e) =>
       {
           e.Properties["cpGvFind_FilterExpression"] = cpGvFind_FilterExpression;
           e.Properties["cpGvFind_SortExpression"] = cpGvFind_SortExpression;
           e.Properties["cpGvFind_PageIndex"] = cpGvFind_PageIndex;
           e.Properties["cpGvFind_PageSize"] = cpGvFind_PageSize;
       };
 
      
   }).BindToCustomData(Model).GetHtml()

