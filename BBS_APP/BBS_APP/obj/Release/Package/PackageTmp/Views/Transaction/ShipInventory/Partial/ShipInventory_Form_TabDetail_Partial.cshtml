@using Models;
@using Models._Cfl;
@{
    var Id = Convert.ToInt64(Request["cbId"]);

    if (ViewBag.Id != null)
    {
        Id = ViewBag.Id;
    }

}

@Html.DevExpress().GridView(settings =>
{
    settings.Name = "gvDetail";
    settings.KeyFieldName = "DetId";
    settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
    //settings.Settings.VerticalScrollableHeight = 350;
    settings.Settings.VerticalScrollBarMode = ScrollBarMode.Auto;

    settings.Width = Unit.Percentage(100);
    settings.Height = Unit.Percentage(100);

    settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
    settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
    settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Row;
    settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.Click;
    settings.SettingsEditing.NewItemRowPosition = GridViewNewItemRowPosition.Bottom;


    settings.CommandColumn.Visible = true;
    settings.CommandColumn.ShowDeleteButton = true;
    settings.CommandColumn.ShowNewButtonInHeader = true;
    settings.CommandColumn.Width = 50;
    settings.Settings.ShowStatusBar = GridViewStatusBarMode.Hidden;
    settings.Columns.Add("Id", "Id").Visible = false;
    settings.Columns.Add("DetId", "DetId").Visible = false;
    settings.Columns.Add(column =>
    {
        column.FieldName = "ItemCode";
        column.Name = "ItemCode";
        column.Caption = "Item Code";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 100;
        column.ReadOnly = true;
        column.Settings.AllowSort = DefaultBoolean.False;

        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;

        //if (Model.Status == "Draft" || Model.Status == "Open")
        //{
        column.SetEditItemTemplateContent(c =>
        {
            ViewContext.Writer.Write(
                 Html.Partial("Partial/ShipInventory_DetailItemNameCombobox_ItemCode_Partial")
             );
        });
        //}
        //    else
        //    {

        //}


    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "ItemDescription";
        column.Name = "ItemDescription";
        column.Caption = "Description";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 300;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;


        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ClientInstanceName = "gvDetail_ItemDescription";
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
    });


    settings.Columns.Add(column =>
    {
        column.FieldName = "UomEntry";
        column.Name = "UomEntry";
        column.Caption = "UomEntry";
        column.ReadOnly = true;

        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 0;
        column.Settings.AllowSort = DefaultBoolean.False;
        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.ClientInstanceName = "gvDetail_UomEntry";

    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "UoMCode";
        column.Name = "UoMCode";
        column.Caption = "UoM";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = false;
        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.ClientInstanceName = "gvDetail_UoMCode";
    });
    
    settings.Columns.Add(column =>
    {
        column.FieldName = "Stock";
        column.Name = "Stock";
        column.Caption = "Stock";


        column.ColumnType = MVCxGridViewColumnType.SpinEdit;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;

        var txt = column.PropertiesEdit as SpinEditProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.SpinButtons.ClientVisible = false;

        //txt.ClientInstanceName = "gvDocContentReferenceDetail_Reference";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "Condition";
        column.Name = "Condition";
        column.Caption = "Kondisi";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;

        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        //txt.ClientInstanceName = "gvDocContentReferenceDetail_Reference";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "QtyReceived";
        column.Name = "QtyReceived";
        column.Caption = "Qty Terima";


        column.ColumnType = MVCxGridViewColumnType.SpinEdit;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;

        var txt = column.PropertiesEdit as SpinEditProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.SpinButtons.ClientVisible = false;

        //txt.ClientInstanceName = "gvDocContentReferenceDetail_Reference";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "LastReceivedDate";
        column.Name = "LastReceivedDate";
        column.Caption = "Tgl Terakhir Terima";


        column.ColumnType = MVCxGridViewColumnType.DateEdit;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;

        var txt = column.PropertiesEdit as DateEditProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        //txt.ClientInstanceName = "gvDocContentReferenceDetail_Reference";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "Remark";
        column.Name = "Remark";
        column.Caption = "Remark";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 350;
        column.Settings.AllowSort = DefaultBoolean.False;

        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        //txt.ClientInstanceName = "gvDocContentReferenceDetail_Reference";
    });



    settings.Settings.ShowFooter = true;

    settings.ClientSideEvents.BeginCallback = "gvDetailOnBeginCallback";
    settings.ClientSideEvents.EndCallback = "gvDetailOnEndCallback";

    settings.ClientSideEvents.BatchEditStartEditing = "gvDetailOnBatchEditStartEditing";
    settings.ClientSideEvents.BatchEditEndEditing = "gvDetailOnBatchEditEndEditing";
    settings.ClientSideEvents.BatchEditRowValidating = "gvDetailOnBatchEditRowValidating";

}).Bind(Model.ListDetails_).GetHtml()
