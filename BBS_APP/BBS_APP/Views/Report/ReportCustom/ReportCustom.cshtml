 

@if (false)
{ <script src="~/Scripts/ASPxScriptIntelliSense.js" type="text/javascript"></script> }

@model List<Models.Report.ReportCustom.ReportCustomModel>


@{
    ViewBag.Title = "Report Custom";
}


<script type="text/javascript">

    $(document).ready(function () {
        SetBtnStatus();
    }
    );

</script>

<script type="text/javascript">


    $.ajaxSetup({
        cache: false
    });

    function OnBegin() {
        loadingPanel.Show();
    }

    function SetBtnStatus() {


    }

    var msgCount = 0;
    function OnSuccess() {

        $("#MessageText").html('<p>' + '(' + (++msgCount) + ') ' + 'Action success</p>' + $("#MessageText").html());

    }


    function OnSuccessMsgBox() {

        $("#MessageText").html('<p>' + '(' + (++msgCount) + ') ' + 'Action success</p>' + $("#MessageText").html());
        loadingPanel.Hide();

        popupSuccess.Show();
        setTimeout(function () { popupSuccess.Hide(); }, 1000);

    }

    function OnFailure(jqXhr, textStatus, errorThrown) {

        if (jqXhr.responseText.substring(0, 12) == "[VALIDATION]") {
            $("#MessageText").html('<p>' + '(' + (++msgCount) + ') ' + jqXhr.responseText + '</p>' + $("#MessageText").html());

            loadingPanel.Hide()
            alert(jqXhr.responseText);
        }
        else {
            // untuk error yg tidak ter capture di validation
            var doc = jqXhr.responseText.match(/.*<title>([\s\S]*)<\/title>.*/);
            $("#MessageText").html('<p>' + '(' + (++msgCount) + ') ' + doc[1] + '</p>' + $("#MessageText").html());

            loadingPanel.Hide();
            alert(doc[1]);
        }

    }

    function OnComplete() {
        loadingPanel.Hide();

    }




    function OnClickBtnRefresh(s, e) {

        $.ajax({
            type: "POST",
            url: '@Url.Action("DetailPartial", "ReportCustom")',
            beforeSend: function () {
                OnBegin();
            },
            success: function (response) {
                $("#contentForm").html(response);
                $.validator.unobtrusive.parse("#formDetail");
                //RefreshValidationParam();
                MVCxClientUtils.FinalizeCallback();
                SetBtnStatus();
                OnSuccess();

            },
            error: function (jqXhr, textStatus, errorThrown) {
                OnFailure(jqXhr, textStatus, errorThrown)
            },
            complete: function () {
                OnComplete()
            }
        });
    }


</script>

<script type="text/javascript">



    function tvReportOnNodeClick(s, e) {
        //alert(e.node.name);


        var arr = e.node.name.split('_')
        if (arr[0] != 'TvReport') {
            $("#contentDetail").html('');
            Report_Id.SetValue(0);
            return;
        }

        var reportId = arr[1];
        //RefreshRemoveValidationParam();
        $.ajax({
            type: "POST",
            url: '@Url.Action("DetailParamPartial", "ReportCustom")',
            data: { Report_Id: reportId },
            beforeSend: function () {
                OnBegin();
            },
            success: function (response) {
                Report_Id.SetValue(reportId)


                $("#contentDetail").html(response);

                $.validator.unobtrusive.parse("#formDetail");
                //RefreshValidationParam();
                MVCxClientUtils.FinalizeCallback();
                SetBtnStatus();
                OnSuccess();


                //adjust agar node yg active scroll nya tampil proporsional
                var selectedNode = tvReport.GetSelectedNode();
                if (!selectedNode)
                    return;
                var scrollElement = tvReport.GetMainElement().parentNode;
                var scrollValue = scrollElement.scrollTop + ASPxClientUtils.GetAbsoluteY(selectedNode.GetHtmlElement()) -
                   Math.round(scrollElement.offsetHeight / 2);
                if (scrollValue >= 0)
                    scrollElement.scrollTop = scrollValue;



            },
            error: function (jqXhr, textStatus, errorThrown) {
                OnFailure(jqXhr, textStatus, errorThrown)
            },
            complete: function () {
                OnComplete()
            }
        });

    }



    function OnClickBtnShow(s, e) {


        if (!($("#formDetail").valid())) {
            var validator = $("#formDetail").validate();
            var errors = validator.numberOfInvalids();
            if (errors) {
                // alert( validator.errorList[0].message);
                validator.errorList[0].element.focus();

            }
            return false;
        }


        var formData = $('#formDetail').serializeObject();


        if (OutputType.GetValue() == 'Excel') {
            SubmitForm('', '@Url.Action("Print", "ReportCustom")', 'post', formData);
        } else if (OutputType.GetValue() == 'Csv') {
            SubmitForm('', '@Url.Action("Print", "ReportCustom")', 'post', formData);
        } else if (OutputType.GetValue() == 'Text') {
            SubmitForm('', '@Url.Action("Print", "ReportCustom")', 'post', formData);
        } else {
            var guid = CreateGuid();
            window.open('', guid);
            SubmitForm(guid, '@Url.Action("Print", "ReportCustom")', 'post', formData);
        }
}



function RefreshValidationParam() {
    $('input[name^="Params["][name$="ParamValue"]').each(function () {
        var str = "IsMandatory_" + $(this).attr("name").split(".")[0];
        str2 = 'input[name="' + str + '"]';
        if ($(str2).attr("value") == 'Y') {
            $(this).rules('add', { required: true, messages: { required: 'required' } });
        }

    });

    $('input[name^="Params["][name$="ParamValues"]').each(function () {
        var str = "IsMandatory_" + $(this).attr("name").split(".")[0];
        str2 = 'input[name="' + str + '"]';
        if ($(str2).attr("value") == 'Y') {
            $(this).rules('add', { required: true, messages: { required: 'required' } });
        }

    });

}


</script>

 @Html.Partial("Partial/ReportCustom_Form_Btn_Partial")


@using (Ajax.BeginForm("mantap", "ReportCustom", null,
new AjaxOptions
{
    HttpMethod = "POST",
    OnBegin = "OnBegin",
    OnSuccess = "OnSuccessMsgBox",
    OnFailure = "OnFailure",
    OnComplete = "OnComplete",
    UpdateTargetId = "contentForm",
    InsertionMode = InsertionMode.Replace,

},
new
{
    id = "formDetail",
    @class = "edit_form",
    style = "height: 200px; width: 100%;",
    autocomplete = "off"
}))
{ 
    <div id="contentForm" style="padding-top: 79px"> 

        @Html.Partial("Partial/ReportCustom_Form_Partial")
    </div> 
}


@Html.DevExpress().LoadingPanel(
    settings =>
    {
        settings.Name = "loadingPanel";
        settings.Modal = true;
        settings.ContainerElementID = "contentGvDetail";
        settings.Styles.LoadingDiv.BackColor = System.Drawing.Color.White;
    }).GetHtml()


 