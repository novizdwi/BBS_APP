@using Models.Transaction.MaterialRequest;
@using System.Web.Script.Serialization;

@{
    /**/

    ViewBag.Id = Model.Id;


}

@model Models.Transaction.MaterialRequest.MaterialRequestModel

@Html.DevExpress().TextBox(
        settings =>
        {
            settings.Name = "Id";
            settings.ControlStyle.CssClass = "editor";
            settings.ShowModelErrors = true;
            settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            settings.ClientVisible = false;
        }
).Bind(Model.Id).GetHtml()

@Html.DevExpress().TextBox(
        settings =>
        {
            settings.Name = "ShipId";
            settings.ControlStyle.CssClass = "editor";
            settings.ShowModelErrors = true;
            settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            settings.ClientVisible = false;
        }
).Bind(Model.ShipId).GetHtml()
@Html.DevExpress().TextBox(
        settings =>
        {
            settings.Name = "WarehouseName";
            settings.ControlStyle.CssClass = "editor";
            settings.ShowModelErrors = true;
            settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            settings.ClientVisible = false;
        }
).Bind(Model.WarehouseName).GetHtml()
@Html.DevExpress().TextBox(
        settings =>
        {
            settings.Name = "ShipCode";
            settings.ControlStyle.CssClass = "editor";
            settings.ShowModelErrors = true;
            settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            settings.ClientVisible = false;
        }
).Bind(Model.ShipCode).GetHtml()
@Html.DevExpress().TextBox(
        settings =>
        {
            settings.Name = "RefType";
            settings.ControlStyle.CssClass = "editor";
            settings.ShowModelErrors = true;
            settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            settings.ClientVisible = false;
        }
).Bind(Model.RefType).GetHtml()
@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "formLayout";
    settings.EncodeHtml = false;
    settings.Width = Unit.Percentage(100);
    settings.AlignItemCaptionsInAllGroups = true;
    settings.ShowItemCaptionColon = false;
    settings.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
    settings.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 600;

    var groupItem = settings.Items.AddGroupItem(itemSettings =>
    {
        itemSettings.Caption = "";
        itemSettings.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        itemSettings.ColCount = 1;
        itemSettings.Width = Unit.Percentage(100);
        itemSettings.GroupBoxStyle.Caption.Paddings.Padding = 5;
        itemSettings.GroupBoxStyle.Caption.Font.Size = 14;
        itemSettings.GroupBoxStyle.Caption.ForeColor = System.Drawing.Color.Orange;

    });


    groupItem.Items.AddEmptyItem().Height = 8;

    var groupItem_2 = groupItem.Items.AddGroupItem(itemSettings =>
    {
        itemSettings.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        itemSettings.GroupBoxDecoration = GroupBoxDecoration.None;
        itemSettings.ShowCaption = DefaultBoolean.False;
        itemSettings.ColCount = 3;
    });

    var groupItem_3 = groupItem.Items.AddGroupItem(itemSettings =>
    {
        itemSettings.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        itemSettings.GroupBoxDecoration = GroupBoxDecoration.None;
        itemSettings.ShowCaption = DefaultBoolean.False;
        itemSettings.ColCount = 3;
    });


    var groupItem_Col1 = groupItem_2.Items.AddGroupItem(itemSettings =>
    {
        itemSettings.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        itemSettings.GroupBoxDecoration = GroupBoxDecoration.None;
        itemSettings.ShowCaption = DefaultBoolean.False;
        itemSettings.ColCount = 1;
        itemSettings.CssClass = "groupCol";
    });



    var groupItem_Col2 = groupItem_2.Items.AddGroupItem(itemSettings =>
    {
        itemSettings.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        itemSettings.GroupBoxDecoration = GroupBoxDecoration.None;
        itemSettings.ShowCaption = DefaultBoolean.False;
        itemSettings.ColCount = 1;
        itemSettings.CssClass = "groupCol";
    });

    var groupItem_Col3 = groupItem_2.Items.AddGroupItem(itemSettings =>
    {
        itemSettings.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        itemSettings.GroupBoxDecoration = GroupBoxDecoration.None;
        itemSettings.ShowCaption = DefaultBoolean.False;
        itemSettings.ColCount = 1;
        itemSettings.CssClass = "groupCol";
    });



    groupItem_Col1.Items.Add(itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
        itemSettings.Caption = "No. MR";
        itemSettings.FieldName = "TransNo";

        var txt = (TextBoxSettings)itemSettings.NestedExtensionSettings;
        txt.Name = "TransNo";
        txt.ReadOnly = true;
        txt.ShowModelErrors = true;
        txt.ControlStyle.CssClass = "editornoimage";
        txt.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        txt.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
    });

    groupItem_Col1.Items.Add(itemSettings =>
    {
        itemSettings.Name = "grpShipName";
        itemSettings.Caption = "Ship Name";
        itemSettings.FieldName = "ShipName";
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;

        var cbo = (ComboBoxSettings)itemSettings.NestedExtensionSettings;
        cbo.Name = "ShipName";
        cbo.Properties.DropDownStyle = DropDownStyle.DropDown;
        cbo.ShowModelErrors = true;
        //cbo.Width = 250;

        cbo.ControlStyle.CssClass = "editornoimage";
        cbo.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        cbo.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        cbo.Properties.ValidationSettings.Display = Display.Dynamic;

        // Hide the default DropDown button
        cbo.Properties.DropDownButton.Visible = false;

        cbo.Properties.ButtonStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        cbo.ReadOnly = true;
        if (Model.Status == "Draft" || Model.Status == "Open")
        {
            EditButton lookUpButton = new EditButton();
            lookUpButton.Text = "";
            lookUpButton.Image.Url = "~/Content/Images/buttonnew/find-hitam.png";
            lookUpButton.Image.Width = 15;

            cbo.Properties.Buttons.Add(lookUpButton);
        }
        else
        {

        }
        cbo.Properties.ClientSideEvents.ButtonClick = "BtnShipNameOnClick";
    });
    groupItem_Col1.Items.Add(itemSettings =>
    {

        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.DateEdit;
        itemSettings.Caption = "Request Date";
        itemSettings.FieldName = "TransDate";

        var txt = (DateEditSettings)itemSettings.NestedExtensionSettings;
        txt.Name = "TransDate";
        txt.ShowModelErrors = true;

        txt.ControlStyle.CssClass = "editornoimage";
        txt.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        txt.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.Properties.NullText = "dd/MM/yyyy";
        txt.Properties.EditFormat = EditFormat.Custom;
        txt.Properties.EditFormatString = "dd/MM/yyyy";
        txt.Properties.EditFormat = EditFormat.Date;

        if (Model.Status == "Draft" || Model.Status == "Open")
        {
            txt.ReadOnly = false;
        }
        else
        {
            txt.Properties.DropDownButton.Visible = false;
            txt.ReadOnly = true;
        }

        txt.Properties.ClientSideEvents.ParseDate = "function (s,e){ { ParseDateEdit(s,e);  } }";

    });

    groupItem_Col1.Items.Add(itemSettings =>
    {
        itemSettings.Name = "grpRef";
        itemSettings.Caption = "Ref. Doc";
        itemSettings.FieldName = "RefNum";
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;

        var cbo = (ComboBoxSettings)itemSettings.NestedExtensionSettings;
        cbo.Name = "RefNum";
        cbo.Properties.DropDownStyle = DropDownStyle.DropDown;
        cbo.ShowModelErrors = true;
        //cbo.Width = 250;

        cbo.ControlStyle.CssClass = "editornoimage";
        cbo.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        cbo.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        cbo.Properties.ValidationSettings.Display = Display.Dynamic;

        // Hide the default DropDown button
        cbo.Properties.DropDownButton.Visible = false;

        cbo.Properties.ButtonStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        cbo.ReadOnly = true;
        if (Model.Status == "Draft" || Model.Status == "Open")
        {
            EditButton lookUpButton = new EditButton();
            lookUpButton.Text = "";
            lookUpButton.Image.Url = "~/Content/Images/buttonnew/find-hitam.png";
            lookUpButton.Image.Width = 15;

            cbo.Properties.Buttons.Add(lookUpButton);
        }
        else
        {

        }
        cbo.Properties.ClientSideEvents.ButtonClick = "BtnRefMROnClick";
    });

    groupItem_Col2.Items.Add(itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;
        itemSettings.FieldName = "Kategori";
        itemSettings.Caption = "Kategori";

        ComboBoxSettings cbo = (ComboBoxSettings)itemSettings.NestedExtensionSettings;
        cbo.Properties.DropDownStyle = DropDownStyle.DropDown;
        cbo.Name = "Kategori";
        cbo.ShowModelErrors = false;
        cbo.Properties.ValueType = typeof(string);
        cbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
        cbo.Properties.Items.Insert(0, new ListEditItem("Docking", "Docking"));
        cbo.Properties.Items.Insert(1, new ListEditItem("Kapal Baru", "Kapal Baru"));
        cbo.Properties.Items.Insert(2, new ListEditItem("Inventory", "Inventory"));
        cbo.ControlStyle.CssClass = "editornoimage";
        cbo.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        cbo.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        cbo.Properties.ClientSideEvents.SelectedIndexChanged = "OnChangeCbWhs";
        if (Model.Status == "Draft" || Model.Status == "Open")
        {
            cbo.ReadOnly = false;
        }
        else
        {
            cbo.Properties.DropDownButton.Visible = false;
            cbo.ReadOnly = true;
        }
    });
    groupItem_Col2.Items.Add( itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;
        itemSettings.FieldName = "ShipSection";
        itemSettings.Caption = "Bagian";

        ComboBoxSettings cbo = (ComboBoxSettings)itemSettings.NestedExtensionSettings;
        cbo.Properties.DropDownStyle = DropDownStyle.DropDown;
        cbo.Name = "ShipSection";
        cbo.ShowModelErrors = false;
        cbo.Properties.TextField = "Name";
        cbo.Properties.ValueField = "Code";
        cbo.Properties.ValueType = typeof(string);
        cbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;


        cbo.Properties.DataSource = Models._Utils.GeneralGetList.GetList("MaterialRequestShipSection");

        cbo.ControlStyle.CssClass = "editornoimage";
        cbo.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        cbo.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        if (Model.Status == "Draft" || Model.Status == "Open")
        {
            cbo.ReadOnly = false;
        }
        else
        {
            cbo.Properties.DropDownButton.Visible = false;
            cbo.ReadOnly = true;
        }
    });

    groupItem_Col2.Items.Add(itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;
        itemSettings.FieldName = "WarehouseCode";
        itemSettings.Caption = "Area Supply";

        ComboBoxSettings cbo = (ComboBoxSettings)itemSettings.NestedExtensionSettings;
        cbo.Properties.DropDownStyle = DropDownStyle.DropDown;
        cbo.Name = "WarehouseCode";
        cbo.ShowModelErrors = false;
        cbo.Properties.TextField = "WhsName";
        cbo.Properties.ValueField = "WhsCode";
        cbo.Properties.ValueType = typeof(string);
        cbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;


        cbo.Properties.DataSource = Models._Utils.GeneralGetList.GetWarehouses();

        cbo.ControlStyle.CssClass = "editornoimage";
        cbo.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        cbo.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        cbo.Properties.ClientSideEvents.SelectedIndexChanged = "OnChangeCbWhs";
        if (Model.Status == "Draft" || Model.Status == "Open")
        {
            cbo.ReadOnly = false;
        }
        else
        {
            cbo.Properties.DropDownButton.Visible = false;
            cbo.ReadOnly = true;
        }
    });
    groupItem_Col2.Items.Add( itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;
        itemSettings.FieldName = "ReqType";
        itemSettings.Caption = "Request Type";

        ComboBoxSettings cbo = (ComboBoxSettings)itemSettings.NestedExtensionSettings;
        cbo.Properties.DropDownStyle = DropDownStyle.DropDown;
        cbo.Name = "ReqType";
        cbo.ShowModelErrors = false;
        cbo.Properties.TextField = "Name";
        cbo.Properties.ValueField = "Code";
        cbo.Properties.ValueType = typeof(string);
        cbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;


        cbo.Properties.DataSource = Models._Utils.GeneralGetList.GetList("MaterialRequestReqType");

        cbo.ControlStyle.CssClass = "editornoimage";
        cbo.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        cbo.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        if (Model.Status == "Draft" || Model.Status == "Open")
        {
            cbo.ReadOnly = false;
        }
        else
        {
            cbo.Properties.DropDownButton.Visible = false;
            cbo.ReadOnly = true;
        }
    });
    groupItem_Col3.Items.Add(m => Model.Remark, itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.Memo;
        itemSettings.Caption = "Remark";
        itemSettings.FieldName = "Remark";
        //itemSettings.Width = 300;

        MemoSettings txt = (MemoSettings)itemSettings.NestedExtensionSettings;
        txt.Name = "Remark";
        txt.ShowModelErrors = true;
        txt.ControlStyle.CssClass = "editornoimage";
        txt.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        txt.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.Height = Unit.Pixel(55);
        if (Model.Status == "Draft" || Model.Status == "Open")
        {
            txt.ReadOnly = false;
        }
        else
        {
            txt.ReadOnly = true;
        }
    });
    groupItem_Col3.Items.Add(m => Model.Status, itemSettings =>
    {
        itemSettings.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;
        itemSettings.Caption = "Status";
        itemSettings.FieldName = "Status";
        //itemSettings.Width = 300;

        ComboBoxSettings cbo = (ComboBoxSettings)itemSettings.NestedExtensionSettings;
        cbo.Properties.DropDownStyle = DropDownStyle.DropDown;
        cbo.Name = "Status";
        //cbo.ReadOnly = true;
        //cbo.ShowModelErrors = true;
        cbo.Properties.TextField = "Name";
        cbo.Properties.ValueField = "Code";
        cbo.Properties.ValueType = typeof(string);
        cbo.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
        //cbo.Properties.DropDownButton.Visible = false;

        cbo.Properties.DataSource = Models._Utils.GeneralGetList.GetList("MaterialRequestStatus");

        cbo.ControlStyle.CssClass = "editornoimage";
        cbo.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        cbo.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        //cbo.Width = 100;
        if ( Model.Status == "Draft")
        {
            cbo.ReadOnly = false;
        }
        else
        {
            cbo.ReadOnly = true;
            cbo.Properties.DropDownButton.Visible = false;
        }
    });
    groupItem.Items.AddTabbedGroupItem(group =>
    {
        group.Name = "TabDetail";
        group.ColSpan = 1;
        group.Width = Unit.Percentage(100);
        group.Height = Unit.Pixel(50);

        group.Items.Add(item =>
        {
            item.Name = "TabItem";
            item.Caption = "  Item        ";
            item.SetNestedContent(() =>
            {
                ViewContext.Writer.Write(
                    Html.Partial("Partial/MaterialRequest_Form_TabDetail_Partial", Model)
                );

            });

        });
        group.Items.Add(item =>
        {
            item.Name = "TabItem";
            item.Caption = "  Attachment        ";
            item.SetNestedContent(() =>
            {
                ViewContext.Writer.Write(
                    Html.Partial("Partial/MaterialRequest_Form_TabAttachment_List_Partial", Model.ListAttachments_)
                );

            });

        });


    });


}).GetHtml()