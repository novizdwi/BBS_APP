@using Models;
@using Models._Cfl;
@{
    var Id = Convert.ToInt64(Request["cbId"]);

    if (ViewBag.Id != null)
    {
        Id = ViewBag.Id;
    }

}

@Html.DevExpress().GridView(settings =>
{
    settings.Name = "gvDetail";
    settings.KeyFieldName = "DetId";
    settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
    //settings.Settings.VerticalScrollableHeight = 200;
    settings.Settings.VerticalScrollBarMode = ScrollBarMode.Auto;

    settings.Width = Unit.Percentage(100);
    settings.Height = Unit.Percentage(100);

    settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
    settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
    settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Row;
    settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.Click;
    settings.SettingsEditing.NewItemRowPosition = GridViewNewItemRowPosition.Bottom;


    settings.CommandColumn.Visible = false;
    settings.CommandColumn.ShowDeleteButton = false;
    settings.CommandColumn.ShowNewButtonInHeader = false;
    settings.CommandColumn.Width = 70;
    settings.Settings.ShowStatusBar = GridViewStatusBarMode.Hidden;
    settings.Columns.Add("Id", "Id").Visible = false;
    settings.Columns.Add("DetId", "DetId").Visible = false;
    settings.Columns.Add("BaseDetId", "BaseDetId").Visible = false;
    settings.Columns.Add(column =>
    {
        column.FieldName = "BaseDetId";
        column.Name = "BaseDetId";
        column.Caption = "BaseDetId";
        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 0;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;


        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;

        txt.ClientInstanceName = "gvDetail_BaseDetId";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "ItemCode";
        column.Name = "ItemCode";
        column.Caption = "ItemCode";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 80;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;


        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.ClientInstanceName = "gvDetail_ItemCode";
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "ItemDescription";
        column.Name = "ItemDescription";
        column.Caption = "Description";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 300;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;


        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.ClientInstanceName = "gvDetail_ItemDescription";
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "Qty";
        column.Name = "Qty";
        column.Caption = "Qty";


        column.ColumnType = MVCxGridViewColumnType.SpinEdit;
        column.Width = 50;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;
        var txt = column.PropertiesEdit as SpinEditProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.SpinButtons.ShowIncrementButtons = false;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        //txt.ClientInstanceName = "gvDocContentReferenceDetail_Reference";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "UomEntry";
        column.Name = "UomEntry";
        column.Caption = "UomEntry";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 0;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;
        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.ClientInstanceName = "gvDetail_UomEntry";


    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "UoMCode";
        column.Name = "UoMCode";
        column.Caption = "Unit";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 50;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;
        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.ClientInstanceName = "gvDetail_UoMCode";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "ROB";
        column.Name = "ROB";
        column.Caption = "ROB";


        column.ColumnType = MVCxGridViewColumnType.SpinEdit;
        column.Width = 50;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;
        var txt = column.PropertiesEdit as SpinEditProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ClientInstanceName = "gvDetail_ROB";
        txt.SpinButtons.ShowIncrementButtons = false;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "Remark";
        column.Name = "Remark";
        column.Caption = "Remark";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;
        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.ClientInstanceName = "gvDetail_Remark";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "QtyVA";
        column.Name = "Qty VA";
        column.Caption = "QtyVA";


        column.ColumnType = MVCxGridViewColumnType.SpinEdit;
        column.Width = 50;
        column.Settings.AllowSort = DefaultBoolean.False;
        if(Model.Status == "Draft")
        {
            column.ReadOnly = false;
        }
        else
        {
            column.ReadOnly = true;
        }

        var txt = column.PropertiesEdit as SpinEditProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.ClientInstanceName = "gvDetail_QtyVA";
        txt.SpinButtons.ShowIncrementButtons = false;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "QtyApproved";
        column.Name = "QtyApproved";
        column.Caption = "Qty Approved";


        column.ColumnType = MVCxGridViewColumnType.SpinEdit;
        column.Width = 100;
        column.Settings.AllowSort = DefaultBoolean.False;
        if (Model.Status == "Draft")
        {
            column.ReadOnly = false;
        }
        else
        {
            column.ReadOnly = true;
        }

        var txt = column.PropertiesEdit as SpinEditProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.ClientInstanceName = "gvDetail_QtyApproved";
        txt.SpinButtons.ShowIncrementButtons = false;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "IsApproved";
        column.Name = "IsApproved";
        column.Caption = "Approved";


        column.ColumnType = MVCxGridViewColumnType.ComboBox;
        column.Width = 100;
        column.Settings.AllowSort = DefaultBoolean.False;


        var txt = column.PropertiesEdit as ComboBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ClientInstanceName = "gvDetail_IsApproved";
        txt.Items.Insert(0, new ListEditItem("Yes", "Y"));
        txt.Items.Insert(1, new ListEditItem("No", "N"));
        if (Model.Status == "Draft")
        {
            column.ReadOnly = false;
        }
        else
        {
            txt.DropDownButton.Visible = false;
            column.ReadOnly = true;
        }
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "Remark2";
        column.Name = "Remark2";
        column.Caption = "Remark VA";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;
        if (Model.Status == "Draft")
        {
            column.ReadOnly = false;
        }
        else
        {
            column.ReadOnly = true;
        }
        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.ClientInstanceName = "gvDetail_Remark2";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "DeliveryDate";
        column.Name = "DeliveryDate";
        column.Caption = "Tgl Terakhir SJ";


        column.ColumnType = MVCxGridViewColumnType.DateEdit;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;

        var txt = column.PropertiesEdit as DateEditProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.DropDownButton.Visible = false;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.ClientInstanceName = "gvDetail_DeliveryDate";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "QtySJ";
        column.Name = "QtySJ";
        column.Caption = "SJ Qty";


        column.ColumnType = MVCxGridViewColumnType.SpinEdit;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;

        var txt = column.PropertiesEdit as SpinEditProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.DecimalPlaces = 4;
        txt.NumberType = SpinEditNumberType.Float;
        txt.DisplayFormatString = "0.###";
        txt.ClientInstanceName = "gvDetail_QtySJ";
        txt.SpinButtons.ShowIncrementButtons = false;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "WhsQty";
        column.Name = "WhsQty";
        column.Caption = "Whs Qty";


        column.ColumnType = MVCxGridViewColumnType.SpinEdit;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;

        var txt = column.PropertiesEdit as SpinEditProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.DecimalPlaces = 4;
        txt.NumberType = SpinEditNumberType.Float;
        txt.DisplayFormatString = "0.###";
        txt.ClientInstanceName = "gvDetail_WhsQty";
        txt.SpinButtons.ShowIncrementButtons = false;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "DocEntryPR";
        column.Name = "DocEntryPR";
        column.Caption = "PR N0. SAP";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.Visible = false;
        column.ReadOnly = true;
        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.ClientInstanceName = "gvDetail_SapDocEntryPR";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "DocNumPR";
        column.Name = "DocNumPR";
        column.Caption = "PR N0. SAP";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;

        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.ClientInstanceName = "gvDetail_DocNumPR";
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "QtyPR";
        column.Name = "QtyPR";
        column.Caption = "PR Qty";


        column.ColumnType = MVCxGridViewColumnType.SpinEdit;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;

        var txt = column.PropertiesEdit as SpinEditProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.DecimalPlaces = 4;
        txt.NumberType = SpinEditNumberType.Float;
        txt.DisplayFormatString = "0.###";
        txt.ClientInstanceName = "gvDetail_QtyPR";
        txt.SpinButtons.ShowIncrementButtons = false;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "DocEntryPO";
        column.Name = "DocEntryPO";
        column.Caption = "PO N0. SAP";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.Visible = false;

        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.ClientInstanceName = "gvDetail_DocEntryPO";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "DocNumPO";
        column.Name = "DocNumPO";
        column.Caption = "PO N0. SAP";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;

        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.ClientInstanceName = "gvDetail_DocNumPO";
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "QtyPO";
        column.Name = "QtyPO";
        column.Caption = "PO Qty";


        column.ColumnType = MVCxGridViewColumnType.SpinEdit;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;

        var txt = column.PropertiesEdit as SpinEditProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ReadOnlyStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        txt.DecimalPlaces = 4;
        txt.NumberType = SpinEditNumberType.Float;
        txt.DisplayFormatString = "0.###";
        txt.ClientInstanceName = "gvDetail_QtyPO";
        txt.SpinButtons.ShowIncrementButtons = false;
    });

    settings.Settings.ShowFooter = true;

    settings.ClientSideEvents.BeginCallback = "gvDetailOnBeginCallback";
    settings.ClientSideEvents.EndCallback = "gvDetailOnEndCallback";

    settings.ClientSideEvents.BatchEditStartEditing = "gvDetailOnBatchEditStartEditing";
    settings.ClientSideEvents.BatchEditEndEditing = "gvDetailOnBatchEditEndEditing";
    settings.ClientSideEvents.BatchEditRowValidating = "gvDetailOnBatchEditRowValidating";

}).Bind(Model.ListDetails_).GetHtml()

