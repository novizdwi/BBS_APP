

@if (false)
{ 
<script src="~/Scripts/ASPxScriptIntelliSense.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-2.2.0.intellisense.js"></script>
<script src="~/Scripts/Test/DXR.js"></script> 
}


@model Models.Authentication.Role.RoleModel


@{
    ViewBag.Title = "Role";
}


<script type="text/javascript">

    $(document).ready(function () {

        SetBtnStatus('new');
         
    }
    );

</script>

<script type="text/javascript">


    $.ajaxSetup({
        cache: false
    });

    function OnBegin() {
        loadingPanel.Show();
    }

    function SetBtnStatus(formMode) {

        var grpBtnAdd = formLayouBtn.GetItemByName('grpBtnAdd');
        var btnAdd = ASPxClientButton.Cast('btnAdd');
        var grpBtnUpdate = formLayouBtn.GetItemByName('grpBtnUpdate');
        var btnUpdate = ASPxClientButton.Cast('btnUpdate');

        var btnDelete = ASPxClientButton.Cast('btnDelete');
        var btnRefresh = ASPxClientButton.Cast('btnRefresh');

        switch (formMode) {
            case 'new':

                grpBtnAdd.SetVisible(true);
                grpBtnUpdate.SetVisible(false);

                btnAdd.SetEnabled(true);
                btnUpdate.SetEnabled(false);
                btnDelete.SetEnabled(false);
                btnRefresh.SetEnabled(false);


                break;
            case 'edit': 

                grpBtnAdd.SetVisible(false);
                grpBtnUpdate.SetVisible(true);

                btnAdd.SetEnabled(false); 
                btnUpdate.SetEnabled(true); 
                btnDelete.SetEnabled(true); 
                btnRefresh.SetEnabled(true);


                break;
            default:

                break;
        }



    }

    var msgCount = 0;

    function OnSuccess() {

        $("#MessageText").html('<p>' + '(' + (++msgCount) + ') ' + 'Action success</p>' + $("#MessageText").html());

    }

    function OnSuccessMsgBox() {

        $("#MessageText").html('<p>' + '(' + (++msgCount) + ') ' + 'Action success</p>' + $("#MessageText").html());

        OnComplete();

        popupSuccess.Show();
        setTimeout(function () { popupSuccess.Hide(); }, 1000);

    }

    function OnFailure(jqXhr, textStatus, errorThrown) {

        if (jqXhr.responseText.substring(0, 12) == "[VALIDATION]") {
            $("#MessageText").html('<p>' + '(' + (++msgCount) + ') ' + jqXhr.responseText + '</p>' + $("#MessageText").html());

            OnComplete();
            alert('[ERROR] - ' + jqXhr.responseText);
        }
        else {
            // untuk error yg tidak ter capture di validation
            var doc = jqXhr.responseText.match(/.*<title>([\s\S]*)<\/title>.*/);
            $("#MessageText").html('<p>' + '(' + (++msgCount) + ') ' + doc[1] + '</p>' + $("#MessageText").html());

            OnComplete();
            alert('[ERROR] - ' + doc[1]);
        }

    }

    function OnComplete() {
        loadingPanel.Hide();
 
       
      
    }

    function BeforeSave() {

        if (!($("#formDetail").valid())) {
            var validator = $("#formDetail").validate();
            var errors = validator.numberOfInvalids();
            if (errors) {
                // alert( validator.errorList[0].message);
                validator.errorList[0].element.focus();

            }
            return false;
        }

        return true;

    }

    function RefreshAfterSuccess(response) {


        $("#contentForm").html(response);

        $.validator.unobtrusive.parse("#formDetail");

        MVCxClientUtils.FinalizeCallback();

    }


    function OnClickBtnNew(s, e) {

        $.ajax({
            type: "POST",
            url: "@Url.Action("DetailPartial", "Role")",
            beforeSend: function () {
                OnBegin();
            },

            success: function (response) {
                RefreshAfterSuccess(response);
                SetBtnStatus('new'); 
                OnSuccess();
            },

            error: function (jqXhr, textStatus, errorThrown) {
                OnFailure(jqXhr, textStatus, errorThrown)
            },

            complete: function () {
                OnComplete()

            }
        });

    }

    function OnClickBtnAdd(s, e) {

        if (BeforeSave() == false) {
            return;
        }
    
        fillHiddenText(); 


            
            $.ajax({
                type: "POST",
                url: '@Url.Action("Add", "Role")',
                data: $("#formDetail").serialize(),
                beforeSend: function () {
                    OnBegin();
                },
                success: function (response) {
                    RefreshAfterSuccess(response);
                    SetBtnStatus('new'); 
                    OnSuccessMsgBox();
                },
                error: function (jqXhr, textStatus, errorThrown) {
                    OnFailure(jqXhr, textStatus, errorThrown)
                },
                complete: function () {
                    OnComplete()
                }
            });
        

    }


    function fillHiddenText() {

        var treeView = ASPxClientTreeView.Cast("TvRoleAuth");

        console.log(treeView);
        //set kumpulan name checkbox ke hidden text ChkNames
        //------------------------------------------
        var chkNames = new Array();
        var names = treeView.nodesInfo;
        $.each(names, function (name, value) {
            chkNames.push(name + '|' + value[2]);
        });
        //alert('NAME :' + chkNames.join(','));
        ChkNames.value = chkNames.join(',');



        //set kumpulan value checkbox ke hidden text ChkValues
        //------------------------------------------
        var checkedNodes = new Array();
        var chks = treeView.nodesState[2];
        var chkValues = new Array();
        $.each(chks, function (name, value) {
            chkValues.push(name.replace('N', '') + '|' + value);
        });
        //alert('VALUE :' + chkValues.join(','));

        ChkValues.value = chkValues.join(',');
    }

    function OnClickBtnUpdate(s, e) {
        
        if (BeforeSave() == false) {
            return;
        }
 
        fillHiddenText();
        //var formData = $('#formDetail').serializeObject();
        //console.log(formData);
        
            $.ajax({
                type: "POST",
                url: '@Url.Action("Update", "Role")',
                data: $("#formDetail").serialize(),
                beforeSend: function () {
                    OnBegin();
                },
                success: function (response) { 
                    OnSuccessMsgBox();
                },
                error: function (jqXhr, textStatus, errorThrown) {
                    OnFailure(jqXhr, textStatus, errorThrown)
                },
                complete: function () {
                    OnComplete() 
                }
            });

        

    }

    function OnClickBtnDelete(s, e) {

        if (confirm('Delete data?')) {
            key = Id.GetValue();
            $.ajax({
                type: "POST",
                url: '@Url.Action("Delete", "Role")',
                data: { Id: key },
                beforeSend: function () {
                    OnBegin();
                },
                success: function (response) {
                    RefreshAfterSuccess(response);
                    SetBtnStatus('new');
                    OnSuccessMsgBox();
                },
                error: function (jqXhr, textStatus, errorThrown) {
                    OnFailure(jqXhr, textStatus, errorThrown)
                },
                complete: function () {
                    OnComplete();
                }
            });
        }
    }


    function OnClickBtnNavFirst(s, e) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("NavFirst", "Role")",
            beforeSend: function () {
                OnBegin();
            },
            success: function (response) {
                RefreshAfterSuccess(response);
                SetBtnStatus('edit');
                OnSuccess();
            },
            error: function (jqXhr, textStatus, errorThrown) {
                OnFailure(jqXhr, textStatus, errorThrown)
            },
            complete: function () {
                OnComplete();
            }
        });
    }

    function OnClickBtnNavPrevious(s, e) {
        key = Id.GetValue();

        $.ajax({
            type: "POST",
            url: '@Url.Action("NavPrevious", "Role")',
            data: { Id: key },
            beforeSend: function () {
                OnBegin();
            },
            success: function (response) {
                RefreshAfterSuccess(response);
                SetBtnStatus('edit');
                OnSuccess();
            },
            error: function (jqXhr, textStatus, errorThrown) {
                OnFailure(jqXhr, textStatus, errorThrown)
            },
            complete: function () {
                OnComplete();
            }
        });
    }

    function OnClickBtnNavNext(s, e) {
        key = Id.GetValue();
        $.ajax({
            type: "POST",
            url: '@Url.Action("NavNext", "Role")',
            data: { Id: key },
            beforeSend: function () {
                OnBegin();
            },
            success: function (response) {
                RefreshAfterSuccess(response);
                SetBtnStatus('edit');
                OnSuccess();
            },
            error: function (jqXhr, textStatus, errorThrown) {
                OnFailure(jqXhr, textStatus, errorThrown)
            },
            complete: function () {
                OnComplete()
            }
        });
    }



    function OnClickBtnNavLast(s, e) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("NavLast", "Role")",
            beforeSend: function () {
                OnBegin();
            },
            success: function (response) {
                RefreshAfterSuccess(response);
                SetBtnStatus('edit');
                OnSuccess();

            },
            error: function (jqXhr, textStatus, errorThrown) {
                OnFailure(jqXhr, textStatus, errorThrown)
            },
            complete: function () {
                OnComplete()
            }
        });
    }

    function OnClickChoose(s, e, key) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("DetailPartial", "Role")',
            data: { Id: key },
            beforeSend: function () {
                OnBegin();
            },
            success: function (response) {
                RefreshAfterSuccess(response);;
                SetBtnStatus('edit');
                OnSuccess();
                popupList.Hide();
            },
            error: function (jqXhr, textStatus, errorThrown) {
                OnFailure(jqXhr, textStatus, errorThrown)
            },
            complete: function () {
                OnComplete()
            }
        });
    }



    function OnClickBtnRefresh(s, e) {
        key = Id.GetValue();

        $.ajax({
            type: "POST",
            url: '@Url.Action("DetailPartial", "Role")',
            data: { Id: key },
            beforeSend: function () {
                OnBegin();
            },
            success: function (response) {
                RefreshAfterSuccess(response);
                SetBtnStatus('edit');
                OnSuccess();

            },
            error: function (jqXhr, textStatus, errorThrown) {
                OnFailure(jqXhr, textStatus, errorThrown)
            },
            complete: function () {
                OnComplete()
            }
        });
    }


</script>


<script type="text/javascript">
    function ChkExpandAllOnValueChanged(s, e) {
        var chk = ASPxClientCheckBox.Cast("ChkExpandAll");
        var tv = ASPxClientTreeView.Cast("TvRoleAuth");

        loadingPanel.Show();

        tv.SetVisible(false); 

        if (chk.GetValue()) { 
            tv.ExpandAll();
            //alert("true");
        } else {
            tv.CollapseAll();
            //alert("false");
        } 
        tv.SetVisible(true);

        loadingPanel.Hide();
    }
</script>


 

@Html.Partial("Partial/Role_Form_Btn_Partial")


@* 
--------------------------------------------------------------------------------------------
*@


@using (Ajax.BeginForm("mantap", "Role", null,
new AjaxOptions
{
    HttpMethod = "POST",
    OnBegin = "OnBegin",
    OnSuccess = "OnSuccessMsgBox",
    OnFailure = "OnFailure",
    OnComplete = "OnComplete",
    UpdateTargetId = "contentForm",
    InsertionMode = InsertionMode.Replace,

},
new
{
    id = "formDetail",
    @class = "edit_form",
    style = "height: 200px; width: 100%;",
    autocomplete = "off"
}))
{ 
<div id="contentForm" style="padding-top:79px">
@Html.Partial("Partial/Role_Form_Partial")
</div> 
}



@Html.DevExpress().LoadingPanel(
    settings =>
    {
        settings.Name = "loadingPanel";
        settings.Modal = true;
        settings.ContainerElementID = "contentForm";
        settings.Styles.LoadingDiv.BackColor = System.Drawing.Color.White;
    }).GetHtml()




@* 
--------------------------------------------------------------------------------------------
*@  

@Html.Partial("Partial/Role_Panel_List_Partial")


