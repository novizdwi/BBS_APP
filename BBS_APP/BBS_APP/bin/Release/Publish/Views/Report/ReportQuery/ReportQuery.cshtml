@if (false)
{ <script src="~/Scripts/ASPxScriptIntelliSense.js" type="text/javascript"></script> }

@*@model Models.Report.ReportQuery.ReportQueryModel*@


@{
    ViewBag.Title = "Report Query";
    int maxInt = int.MaxValue;
}


<script type="text/javascript">

    $(document).ready(function () {

        SetBtnStatus();
    }
    );

</script>

<script type="text/javascript">


    $.ajaxSetup({
        cache: false
    });

    function OnBegin() {
        loadingPanel.Show();
    }

    function SetBtnStatus() {
        if (Query_Id.GetValue() != null) {
            btnFilter.SetEnabled(true);
            btnExcel.SetEnabled(true);
            btnExcelAllPage.SetEnabled(true);
        } else {
            btnFilter.SetEnabled(false);
            btnExcel.SetEnabled(false);
            btnExcelAllPage.SetEnabled(false);
        }

    }

    var msgCount = 0;
    function OnSuccess() {

        $("#MessageText").html('<p>' + '(' + (++msgCount) + ') ' + 'Action success</p>' + $("#MessageText").html());

    }


    function OnSuccessMsgBox() {

        $("#MessageText").html('<p>' + '(' + (++msgCount) + ') ' + 'Action success</p>' + $("#MessageText").html());
        loadingPanel.Hide();

        popupSuccess.Show();
        setTimeout(function () { popupSuccess.Hide(); }, 1000);

    }

    function OnFailure(jqXhr, textStatus, errorThrown) {

        if (jqXhr.responseText.substring(0, 12) == "[VALIDATION]") {
            $("#MessageText").html('<p>' + '(' + (++msgCount) + ') ' + jqXhr.responseText + '</p>' + $("#MessageText").html());

            loadingPanel.Hide()
            alert(jqXhr.responseText);
        }
        else {
            // untuk error yg tidak ter capture di validation
            var doc = jqXhr.responseText.match(/.*<title>([\s\S]*)<\/title>.*/);
            $("#MessageText").html('<p>' + '(' + (++msgCount) + ') ' + doc[1] + '</p>' + $("#MessageText").html());

            loadingPanel.Hide();
            alert(doc[1]);
        }

    }

    function OnComplete() {
        loadingPanel.Hide();


    }




    function OnClickBtnRefresh(s, e) {



        $.ajax({
            type: "POST",
            url: '@Url.Action("DetailPartial", "ReportQuery")',
            beforeSend: function () {
                OnBegin();
            },
            success: function (response) {
                $("#contentForm").html(response);
                $.validator.unobtrusive.parse("#formDetail");
                MVCxClientUtils.FinalizeCallback();
                SetBtnStatus();
                OnSuccess();

            },
            error: function (jqXhr, textStatus, errorThrown) {
                OnFailure(jqXhr, textStatus, errorThrown)
            },
            complete: function () {
                OnComplete()
            }
        });
    }

    function OnClickBtnFilter(s, e) {

        var gvDetail = ASPxClientGridView.Cast('gvDetail|' + Query_Id.GetValue() + '|');

        gvDetail.ShowFilterControl();


    }

    function OnClickBtnExcel(s, e) {
        var gvDetail = ASPxClientGridView.Cast('gvDetail|' + Query_Id.GetValue() + '|');

        SubmitForm('', '@Url.Action("ExportTo", "ReportQuery")', 'post', {
            hidden_CpGvFind_FilterExpression: gvDetail.cpGvFind_FilterExpression,
            hidden_CpGvFind_SortExpression: gvDetail.cpGvFind_SortExpression,
            hidden_CpGvFind_PageIndex: gvDetail.cpGvFind_PageIndex,
            hidden_CpGvFind_PageSize: gvDetail.cpGvFind_PageSize,
            Query_Id: gvDetail.cpQuery_Id,
            Params: gvDetail.cpParams
        });

    }

    function OnClickBtnExcelAllPage(s, e) {
        var gvDetail = ASPxClientGridView.Cast('gvDetail|' + Query_Id.GetValue() + '|');

        SubmitForm('', '@Url.Action("ExportTo", "ReportQuery")', 'post', {
            hidden_CpGvFind_FilterExpression: gvDetail.cpGvFind_FilterExpression,
            hidden_CpGvFind_SortExpression: gvDetail.cpGvFind_SortExpression,
            hidden_CpGvFind_PageIndex: 0,
            hidden_CpGvFind_PageSize:@(@maxInt),
            Query_Id: gvDetail.cpQuery_Id,
            Params: gvDetail.cpParams
        });

    }


    function OnClickBtnShowCurrentParam(s, e) {

    }

    function OnClickBtnShowNewParam(s, e) {

    }



</script>

<script type="text/javascript">

    function tvQueryOnNodeClick(s, e) {
        //alert(e.node.name); 

        var arr = e.node.name.split('_')
        if (arr[0] != 'TvQuery') {
            $("#contentGvDetail").html('');
            Query_Id.SetValue(null);
            SetBtnStatus();
            return;
        }

        $("#contentDetail").html('');
        $("#contentGvDetail").html('');
        btnExcel.SetEnabled(false);
        btnExcelAllPage.SetEnabled(false);

        var queryId = arr[1];
        //alert(queryId);
        $.ajax({
            type: "POST",
            url: '@Url.Action("DetailParamPartial", "ReportQuery")',
            data: { Query_Id: queryId },
            beforeSend: function () {
                OnBegin();
            },
            success: function (response) {
                Query_Id.SetValue(queryId);

                $("#contentDetail").html(response);
                $.validator.unobtrusive.parse("#formDetail");
                RefreshValidationParam();
                MVCxClientUtils.FinalizeCallback();
                OnSuccess();

            },
            error: function (jqXhr, textStatus, errorThrown) {
                OnFailure(jqXhr, textStatus, errorThrown)
            },
            complete: function () {
                OnComplete()
            }
        });

    }


    function OnClickBtnShow(s, e) {


        if (!($("#formDetail").valid())) {
            var validator = $("#formDetail").validate();
            var errors = validator.numberOfInvalids();
            if (errors) {
                // alert( validator.errorList[0].message);
                validator.errorList[0].element.focus();

            }
            return false;
        }


        var formData = $('#formDetail').serializeObject();

        //var arr = e.node.name.split('_')
        //var queryId = arr[1];

        $.extend(formData);

        $.ajax({
            type: "POST",
            url: '@Url.Action("ShowResultQuery", "ReportQuery")',
            data: formData,
            beforeSend: function () {
                OnBegin();
            },
            success: function (response) {
                $("#contentGvDetail").html(response);
                $.validator.unobtrusive.parse("#formDetail"); 
                MVCxClientUtils.FinalizeCallback();
                btnExcel.SetEnabled(true);
                btnExcelAllPage.SetEnabled(true);
                OnSuccess();
            },
            error: function (jqXhr, textStatus, errorThrown) {
                OnFailure(jqXhr, textStatus, errorThrown)
            },
            complete: function () {
                OnComplete();
            }
        });



    }



    function RefreshValidationParam() {
        $('input[name^="Params["][name$="ParamValue"]').each(function () {
            var str = "IsMandatory_" + $(this).attr("name").split(".")[0];
            str2 = 'input[name="' + str + '"]';
            if ($(str2).attr("value") == 'Y') {
                $(this).rules('add', { required: true, messages: { required: 'required' } });
            }

        });

        $('input[name^="Params["][name$="ParamValues"]').each(function () {
            var str = "IsMandatory_" + $(this).attr("name").split(".")[0];
            str2 = 'input[name="' + str + '"]';
            if ($(str2).attr("value") == 'Y') {
                $(this).rules('add', { required: true, messages: { required: 'required' } });
            }

        });

    }

@*    function Query_IdValueChanged(s, e) {  

        $.ajax({
            type: "POST",
            url: '@Url.Action("ListDetailPartial", "ReportQuery")',
            data: { Query_Id: Query_Id.GetValue() },
            beforeSend: function () {
                OnBegin();
            },
            success: function (response) {
                $("#contentGvDetail").html(response);
                $.validator.unobtrusive.parse("#formDetail");
                MVCxClientUtils.FinalizeCallback();
                SetBtnStatus();
                OnSuccess();

            },
            error: function (jqXhr, textStatus, errorThrown) {
                OnFailure(jqXhr, textStatus, errorThrown)
            },
            complete: function () {
                OnComplete()
            }
        });

    } *@


    function gvDetailBeginCallback(s, e) {
        e.customArgs['Query_Id'] = s.cpQuery_Id;
        e.customArgs['Params'] = s.cpParams;
    }



</script>



<script type="text/javascript">

    function OnClickColumnLink(s, e, url, Id) {

        var guid = CreateGuid();
        window.open('', guid);
        SubmitForm(guid, url, 'post', {
            Id: Id
        });
    }


</script>


@Html.Partial("Partial/ReportQuery_Form_Btn_Partial")


@using (Ajax.BeginForm("mantap", "ReportQuery", null,
new AjaxOptions
{
    HttpMethod = "POST",
    OnBegin = "OnBegin",
    OnSuccess = "OnSuccessMsgBox",
    OnFailure = "OnFailure",
    OnComplete = "OnComplete",
    UpdateTargetId = "contentForm",
    InsertionMode = InsertionMode.Replace,

},
new
{
    id = "formDetail",
    @class = "edit_form",
    style = "height: 200px; width: 100%;",
    autocomplete = "off"
}))
{ 
<div id="contentForm" style="padding-top: 79px;">

@Html.Partial("Partial/ReportQuery_Form_Partial")
</div> 
}


@Html.DevExpress().LoadingPanel(
    settings =>
    {
        settings.Name = "loadingPanel";
        settings.Modal = true;
        settings.ContainerElementID = "contentGvDetail";
        settings.Styles.LoadingDiv.BackColor = System.Drawing.Color.White;
    }).GetHtml()
