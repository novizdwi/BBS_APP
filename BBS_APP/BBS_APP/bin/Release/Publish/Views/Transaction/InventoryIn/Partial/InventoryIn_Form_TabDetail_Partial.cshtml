@using Models;
@using Models._Cfl;
@{
    var Id = Convert.ToInt64(Request["cbId"]);

    if (ViewBag.Id != null)
    {
        Id = ViewBag.Id;
    }
}

@Html.DevExpress().GridView(settings =>
{
    settings.Name = "gvDetail";
    settings.KeyFieldName = "DetId";
    settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
    settings.Settings.VerticalScrollableHeight = 350;
    settings.Settings.VerticalScrollBarMode = ScrollBarMode.Auto;
    settings.ControlStyle.CssClass = "grid-view";
    settings.Width = Unit.Percentage(100);
    settings.Height = Unit.Percentage(100);

    settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
    settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
    settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Row;
    settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.Click;
    settings.SettingsEditing.NewItemRowPosition = GridViewNewItemRowPosition.Bottom;


    settings.CommandColumn.Visible = false;
    settings.CommandColumn.ShowDeleteButton = false;
    settings.CommandColumn.ShowNewButtonInHeader = false;
    settings.CommandColumn.Width = 70;
    settings.Settings.ShowStatusBar = GridViewStatusBarMode.Hidden;

    settings.Columns.Add("Id", "Id").Visible = false;
    settings.Columns.Add("DetId", "DetId").Visible = false;
    settings.Columns.Add(column =>
    {
        column.FieldName = "ItemCodeKey";
        column.Name = "ItemCodeKey";
        column.Caption = "Item Code";

        column.SetDataItemTemplateContent(c =>
        {

            string valText = (string)DataBinder.Eval(c.DataItem, "ItemCode");

            string valLinkControlerName = "InventoryIn";


            string valId = (string)DataBinder.Eval(c.DataItem, "ItemCodeKey");

            string valManBtchNum = (string)DataBinder.Eval(c.DataItem, "ManBtchNum");
            if (valManBtchNum == "Y")
            {

                ViewContext.Writer.Write(

                    Html.DevExpress().HyperLink(settingsHL =>
                    {
                        settingsHL.Name = "BtnColumnLink_" + Guid.NewGuid();
                        settingsHL.NavigateUrl = "javascript:void(0)";
                        settingsHL.Properties.Text = valText;
                        settingsHL.Properties.ClientSideEvents.Click = string.Format("function(s, e) {{ gvInventoryInDetailOnCustomButtonClick(s, e, '{0}'); }}", valId);

                    }).GetHtml()

                );
            }
            else
            {
                ViewContext.Writer.Write(

                    Html.DevExpress().Label(settingsHL =>
                    {
                        settingsHL.Name = "BtnColumnLink_" + Guid.NewGuid();
                        settingsHL.Text = valText;

                    }).GetHtml()

                );
            }
        });





        column.PropertiesEdit.Style.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        column.CellStyle.BackColor = System.Drawing.Color.FromName("#E0E0E0");
        column.CellStyle.ForeColor = System.Drawing.Color.Black;
        column.ReadOnly = true;


    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "ItemCode";
        column.Name = "ItemCode";
        column.Caption = "Item Code";
        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 0;
        column.Settings.AllowSort = DefaultBoolean.False;


        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;

        column.SetEditItemTemplateContent(c =>
        {

            ViewContext.Writer.Write(
                 Html.Partial("Partial/InventoryIn_DetailItemNameCombobox_ItemCode_Partial")
             );


        });



        column.PropertiesEdit.Style.BackColor = System.Drawing.Color.Lavender;
        column.CellStyle.BackColor = System.Drawing.Color.Lavender;
        column.CellStyle.ForeColor = System.Drawing.Color.Black;

    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "ManBtchNum";
        column.Name = "ManBtchNum";
        column.Caption = "ManBtchNum";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 0;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;


        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ClientInstanceName = "gvDetail_ManBtchNum";

    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "ItemDescription";
        column.Name = "ItemDescription";
        column.Caption = "Description";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 300;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;


        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ClientInstanceName = "gvDetail_ItemDescription";

    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "ShipId";
        column.Name = "ShipId";
        column.Caption = "ShipId";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 0;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;


        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ClientInstanceName = "gvDetail_ShipId";

    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "SapPoId";
        column.Name = "SapPoId";
        column.Caption = "SapPoId";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 0;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;


        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ClientInstanceName = "gvDetail_SapPoId";

    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "SapPoLineNum";
        column.Name = "SapPoLineNum";
        column.Caption = "SapPoLineNum";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 0;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;


        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ClientInstanceName = "gvDetail_SapNoLineNum";

    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "ShipName";
        column.Name = "ShipName";
        column.Caption = "ShipName";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 0;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;


        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ClientInstanceName = "gvDetail_ShipName";

    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "UomEntry";
        column.Name = "UomEntry";
        column.Caption = "UomEntry";
        column.ReadOnly = true;

        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 0;
        column.Settings.AllowSort = DefaultBoolean.False;
        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ClientInstanceName = "gvDetail_UomEntry";

    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "UoMCode";
        column.Name = "UoMCode";
        column.Caption = "UoM";
        column.ReadOnly = true;

        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 70;
        column.Settings.AllowSort = DefaultBoolean.False;

        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ClientInstanceName = "gvDetail_UoMCode";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "QtyOrder";
        column.Name = "QtyOrder";
        column.Caption = "Qty Order";
        column.ReadOnly = true;

        column.ColumnType = MVCxGridViewColumnType.SpinEdit;
        column.Width = 70;
        column.Settings.AllowSort = DefaultBoolean.False;

        var txt = column.PropertiesEdit as SpinEditProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.DecimalPlaces = 4;
        txt.NumberType = SpinEditNumberType.Float;
        txt.DisplayFormatString = "0.###";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "QtyOpen";
        column.Name = "Qty Open";
        column.Caption = "QtyOpen";


        column.ColumnType = MVCxGridViewColumnType.SpinEdit;
        column.Width = 70;
        column.Settings.AllowSort = DefaultBoolean.False;


        var txt = column.PropertiesEdit as SpinEditProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ClientInstanceName = "gvDetail_QtyOpen";
        txt.SpinButtons.ShowIncrementButtons = false;
        txt.DecimalPlaces = 4;
        txt.NumberType = SpinEditNumberType.Float;
        txt.DisplayFormatString = "0.###";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "QtyReceipt";
        column.Name = "QtyReceipt";
        column.Caption = "Qty Received";


        column.ColumnType = MVCxGridViewColumnType.SpinEdit;
        column.Width = 80;
        column.Settings.AllowSort = DefaultBoolean.False;

        var txt = column.PropertiesEdit as SpinEditProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.DecimalPlaces = 4;
        txt.NumberType = SpinEditNumberType.Float;
        txt.DisplayFormatString = "0.###";
    });


    settings.Columns.Add(column =>
    {
        column.FieldName = "SapPoId";
        column.Name = "SapPoId";
        column.Caption = "PO N0. SAP";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.Visible = false;

        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ClientInstanceName = "gvDetail_DocEntryPO";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "SapPoNo";
        column.Name = "SapPoNo";
        column.Caption = "PO NO. SAP";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;

        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ClientInstanceName = "gvDetail_DocNumPO";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "MRNum";
        column.Name = "MRNum";
        column.Caption = "MR No.";


        column.ColumnType = MVCxGridViewColumnType.TextBox;
        column.Width = 150;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.ReadOnly = true;

        var txt = column.PropertiesEdit as TextBoxProperties;
        txt.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
        txt.ClientInstanceName = "gvDetail_DocNumPO";
    });



    settings.Settings.ShowFooter = true;

    settings.ClientSideEvents.BeginCallback = "gvDetailOnBeginCallback";
    settings.ClientSideEvents.EndCallback = "gvDetailOnEndCallback";

    settings.ClientSideEvents.BatchEditStartEditing = "gvDetailOnBatchEditStartEditing";
    settings.ClientSideEvents.BatchEditEndEditing = "gvDetailOnBatchEditEndEditing";
    settings.ClientSideEvents.BatchEditRowValidating = "gvDetailOnBatchEditRowValidating";

}).Bind(Model).GetHtml()

